{"version":3,"names":["createAbortError","delay","ms","opts","Promise","resolve","reject","signal","aborted","timeout","setTimeout","cleanup","onabort","clearTimeout","addEventListener","removeEventListener","undefined"],"sources":["delay.js"],"sourcesContent":["import { createAbortError } from './AbortController.js'\n\n/**\n * Return a Promise that resolves after `ms` milliseconds.\n *\n * @param {number} ms - Number of milliseconds to wait.\n * @param {{ signal?: AbortSignal }} [opts] - An abort signal that can be used to cancel the delay early.\n * @returns {Promise<void>} A Promise that resolves after the given amount of `ms`.\n */\nexport default function delay (ms, opts) {\n  return new Promise((resolve, reject) => {\n    if (opts?.signal?.aborted) {\n      return reject(createAbortError())\n    }\n\n    const timeout = setTimeout(() => {\n      cleanup() // eslint-disable-line no-use-before-define\n      resolve()\n    }, ms)\n\n    function onabort () {\n      clearTimeout(timeout)\n      cleanup() // eslint-disable-line no-use-before-define\n      reject(createAbortError())\n    }\n    opts?.signal?.addEventListener('abort', onabort)\n    function cleanup () {\n      opts?.signal?.removeEventListener('abort', onabort)\n    }\n    return undefined\n  })\n}\n"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,sBAAjC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,KAAT,CAAgBC,EAAhB,EAAoBC,IAApB,EAA0B;EACvC,OAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;IAAA;;IACtC,IAAIH,IAAJ,4BAAIA,IAAI,CAAEI,MAAV,aAAI,aAAcC,OAAlB,EAA2B;MACzB,OAAOF,MAAM,CAACN,gBAAgB,EAAjB,CAAb;IACD;;IAED,MAAMS,OAAO,GAAGC,UAAU,CAAC,MAAM;MAC/BC,OAAO,GADwB,CACrB;;MACVN,OAAO;IACR,CAHyB,EAGvBH,EAHuB,CAA1B;;IAKA,SAASU,OAAT,GAAoB;MAClBC,YAAY,CAACJ,OAAD,CAAZ;MACAE,OAAO,GAFW,CAER;;MACVL,MAAM,CAACN,gBAAgB,EAAjB,CAAN;IACD;;IACDG,IAAI,QAAJ,6BAAAA,IAAI,CAAEI,MAAN,mCAAcO,gBAAd,CAA+B,OAA/B,EAAwCF,OAAxC;;IACA,SAASD,OAAT,GAAoB;MAAA;;MAClBR,IAAI,QAAJ,6BAAAA,IAAI,CAAEI,MAAN,mCAAcQ,mBAAd,CAAkC,OAAlC,EAA2CH,OAA3C;IACD;;IACD,OAAOI,SAAP;EACD,CApBM,CAAP;AAqBD"}