{"version":3,"names":["DATA_URL_PATTERN","dataURItoBlob","dataURI","opts","toFile","dataURIData","exec","mimeType","data","binary","atob","decodeURIComponent","bytes","Uint8Array","length","i","charCodeAt","File","name","type","Blob"],"sources":["dataURItoBlob.js"],"sourcesContent":["const DATA_URL_PATTERN = /^data:([^/]+\\/[^,;]+(?:[^,]*?))(;base64)?,([\\s\\S]*)$/\n\nexport default function dataURItoBlob (dataURI, opts, toFile) {\n  // get the base64 data\n  const dataURIData = DATA_URL_PATTERN.exec(dataURI)\n\n  // user may provide mime type, if not get it from data URI\n  const mimeType = opts.mimeType ?? dataURIData?.[1] ?? 'plain/text'\n\n  let data\n  if (dataURIData[2] != null) {\n    const binary = atob(decodeURIComponent(dataURIData[3]))\n    const bytes = new Uint8Array(binary.length)\n    for (let i = 0; i < binary.length; i++) {\n      bytes[i] = binary.charCodeAt(i)\n    }\n    data = [bytes]\n  } else {\n    data = [decodeURIComponent(dataURIData[3])]\n  }\n\n  // Convert to a File?\n  if (toFile) {\n    return new File(data, opts.name || '', { type: mimeType })\n  }\n\n  return new Blob(data, { type: mimeType })\n}\n"],"mappings":"AAAA,MAAMA,gBAAgB,GAAG,sDAAzB;AAEA,eAAe,SAASC,aAAT,CAAwBC,OAAxB,EAAiCC,IAAjC,EAAuCC,MAAvC,EAA+C;EAAA;;EAC5D;EACA,MAAMC,WAAW,GAAGL,gBAAgB,CAACM,IAAjB,CAAsBJ,OAAtB,CAApB,CAF4D,CAI5D;;EACA,MAAMK,QAAQ,6BAAGJ,IAAI,CAACI,QAAR,6BAAoBF,WAApB,oBAAoBA,WAAW,CAAG,CAAH,CAA/B,mBAAwC,YAAtD;EAEA,IAAIG,IAAJ;;EACA,IAAIH,WAAW,CAAC,CAAD,CAAX,IAAkB,IAAtB,EAA4B;IAC1B,MAAMI,MAAM,GAAGC,IAAI,CAACC,kBAAkB,CAACN,WAAW,CAAC,CAAD,CAAZ,CAAnB,CAAnB;IACA,MAAMO,KAAK,GAAG,IAAIC,UAAJ,CAAeJ,MAAM,CAACK,MAAtB,CAAd;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,MAAM,CAACK,MAA3B,EAAmCC,CAAC,EAApC,EAAwC;MACtCH,KAAK,CAACG,CAAD,CAAL,GAAWN,MAAM,CAACO,UAAP,CAAkBD,CAAlB,CAAX;IACD;;IACDP,IAAI,GAAG,CAACI,KAAD,CAAP;EACD,CAPD,MAOO;IACLJ,IAAI,GAAG,CAACG,kBAAkB,CAACN,WAAW,CAAC,CAAD,CAAZ,CAAnB,CAAP;EACD,CAjB2D,CAmB5D;;;EACA,IAAID,MAAJ,EAAY;IACV,OAAO,IAAIa,IAAJ,CAAST,IAAT,EAAeL,IAAI,CAACe,IAAL,IAAa,EAA5B,EAAgC;MAAEC,IAAI,EAAEZ;IAAR,CAAhC,CAAP;EACD;;EAED,OAAO,IAAIa,IAAJ,CAASZ,IAAT,EAAe;IAAEW,IAAI,EAAEZ;EAAR,CAAf,CAAP;AACD"}