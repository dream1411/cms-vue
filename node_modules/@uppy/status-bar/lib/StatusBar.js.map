{"version":3,"names":["UIPlugin","getSpeed","getBytesRemaining","getTextDirection","statusBarStates","StatusBarUI","packageJson","locale","getTotalSpeed","files","totalSpeed","forEach","file","progress","getTotalETA","totalBytesRemaining","reduce","total","Math","round","getUploadingState","error","isAllComplete","recoveredState","STATE_ERROR","STATE_COMPLETE","STATE_WAITING","state","fileIDs","Object","keys","i","length","uploadStarted","uploadComplete","STATE_UPLOADING","preprocess","STATE_PREPROCESSING","postprocess","STATE_POSTPROCESSING","StatusBar","constructor","uppy","opts","startUpload","getState","emit","undefined","upload","catch","id","title","type","defaultLocale","defaultOptions","target","hideUploadButton","hideRetryButton","hidePauseResumeButton","hideCancelButton","showProgressDetails","hideAfterFinish","doneButtonHandler","i18nInit","render","bind","install","capabilities","allowNewUpload","totalProgress","newFiles","startedFiles","completeFiles","inProgressNotPausedFiles","isUploadStarted","isAllErrored","isAllPaused","isUploadInProgress","isSomeGhost","getObjectOfFilesPerState","newFilesOrRecovered","values","totalETA","resumableUploads","supportsUploadProgress","uploadProgress","totalSize","totalUploadedSize","bytesTotal","bytesUploaded","uploadState","complete","numUploads","i18n","isTargetDOMEl","onMount","element","el","direction","dir","mount","uninstall","unmount","VERSION","version"],"sources":["StatusBar.jsx"],"sourcesContent":["import { UIPlugin } from '@uppy/core'\nimport getSpeed from '@uppy/utils/lib/getSpeed'\nimport getBytesRemaining from '@uppy/utils/lib/getBytesRemaining'\nimport getTextDirection from '@uppy/utils/lib/getTextDirection'\nimport statusBarStates from './StatusBarStates.js'\nimport StatusBarUI from './StatusBarUI.jsx'\n\nimport packageJson from '../package.json'\nimport locale from './locale.js'\n\nfunction getTotalSpeed (files) {\n  let totalSpeed = 0\n  files.forEach((file) => {\n    totalSpeed += getSpeed(file.progress)\n  })\n  return totalSpeed\n}\n\nfunction getTotalETA (files) {\n  const totalSpeed = getTotalSpeed(files)\n  if (totalSpeed === 0) {\n    return 0\n  }\n\n  const totalBytesRemaining = files.reduce((total, file) => {\n    return total + getBytesRemaining(file.progress)\n  }, 0)\n\n  return Math.round((totalBytesRemaining / totalSpeed) * 10) / 10\n}\n\nfunction getUploadingState (error, isAllComplete, recoveredState, files) {\n  if (error && !isAllComplete) {\n    return statusBarStates.STATE_ERROR\n  }\n\n  if (isAllComplete) {\n    return statusBarStates.STATE_COMPLETE\n  }\n\n  if (recoveredState) {\n    return statusBarStates.STATE_WAITING\n  }\n\n  let state = statusBarStates.STATE_WAITING\n  const fileIDs = Object.keys(files)\n  for (let i = 0; i < fileIDs.length; i++) {\n    const { progress } = files[fileIDs[i]]\n    // If ANY files are being uploaded right now, show the uploading state.\n    if (progress.uploadStarted && !progress.uploadComplete) {\n      return statusBarStates.STATE_UPLOADING\n    }\n    // If files are being preprocessed AND postprocessed at this time, we show the\n    // preprocess state. If any files are being uploaded we show uploading.\n    if (progress.preprocess && state !== statusBarStates.STATE_UPLOADING) {\n      state = statusBarStates.STATE_PREPROCESSING\n    }\n    // If NO files are being preprocessed or uploaded right now, but some files are\n    // being postprocessed, show the postprocess state.\n    if (\n      progress.postprocess\n      && state !== statusBarStates.STATE_UPLOADING\n      && state !== statusBarStates.STATE_PREPROCESSING\n    ) {\n      state = statusBarStates.STATE_POSTPROCESSING\n    }\n  }\n  return state\n}\n\n/**\n * StatusBar: renders a status bar with upload/pause/resume/cancel/retry buttons,\n * progress percentage and time remaining.\n */\nexport default class StatusBar extends UIPlugin {\n  static VERSION = packageJson.version\n\n  constructor (uppy, opts) {\n    super(uppy, opts)\n    this.id = this.opts.id || 'StatusBar'\n    this.title = 'StatusBar'\n    this.type = 'progressindicator'\n\n    this.defaultLocale = locale\n\n    // set default options, must be kept in sync with @uppy/react/src/StatusBar.js\n    const defaultOptions = {\n      target: 'body',\n      hideUploadButton: false,\n      hideRetryButton: false,\n      hidePauseResumeButton: false,\n      hideCancelButton: false,\n      showProgressDetails: false,\n      hideAfterFinish: true,\n      doneButtonHandler: null,\n    }\n\n    this.opts = { ...defaultOptions, ...opts }\n\n    this.i18nInit()\n\n    this.render = this.render.bind(this)\n    this.install = this.install.bind(this)\n  }\n\n  startUpload = () => {\n    const { recoveredState } = this.uppy.getState()\n\n    if (recoveredState) {\n      this.uppy.emit('restore-confirmed')\n      return undefined\n    }\n\n    return this.uppy.upload().catch(() => {\n      // Error logged in Core\n    })\n  }\n\n  render (state) {\n    const {\n      capabilities,\n      files,\n      allowNewUpload,\n      totalProgress,\n      error,\n      recoveredState,\n    } = state\n\n    const {\n      newFiles,\n      startedFiles,\n      completeFiles,\n      inProgressNotPausedFiles,\n\n      isUploadStarted,\n      isAllComplete,\n      isAllErrored,\n      isAllPaused,\n      isUploadInProgress,\n      isSomeGhost,\n    } = this.uppy.getObjectOfFilesPerState()\n\n    // If some state was recovered, we want to show Upload button/counter\n    // for all the files, because in this case it’s not an Upload button,\n    // but “Confirm Restore Button”\n    const newFilesOrRecovered = recoveredState\n      ? Object.values(files)\n      : newFiles\n    const totalETA = getTotalETA(inProgressNotPausedFiles)\n    const resumableUploads = !!capabilities.resumableUploads\n    const supportsUploadProgress = capabilities.uploadProgress !== false\n\n    let totalSize = 0\n    let totalUploadedSize = 0\n\n    startedFiles.forEach((file) => {\n      totalSize += file.progress.bytesTotal || 0\n      totalUploadedSize += file.progress.bytesUploaded || 0\n    })\n\n    return StatusBarUI({\n      error,\n      uploadState: getUploadingState(\n        error,\n        isAllComplete,\n        recoveredState,\n        state.files || {},\n      ),\n      allowNewUpload,\n      totalProgress,\n      totalSize,\n      totalUploadedSize,\n      isAllComplete: false,\n      isAllPaused,\n      isAllErrored,\n      isUploadStarted,\n      isUploadInProgress,\n      isSomeGhost,\n      recoveredState,\n      complete: completeFiles.length,\n      newFiles: newFilesOrRecovered.length,\n      numUploads: startedFiles.length,\n      totalETA,\n      files,\n      i18n: this.i18n,\n      uppy: this.uppy,\n      startUpload: this.startUpload,\n      doneButtonHandler: this.opts.doneButtonHandler,\n      resumableUploads,\n      supportsUploadProgress,\n      showProgressDetails: this.opts.showProgressDetails,\n      hideUploadButton: this.opts.hideUploadButton,\n      hideRetryButton: this.opts.hideRetryButton,\n      hidePauseResumeButton: this.opts.hidePauseResumeButton,\n      hideCancelButton: this.opts.hideCancelButton,\n      hideAfterFinish: this.opts.hideAfterFinish,\n      isTargetDOMEl: this.isTargetDOMEl,\n    })\n  }\n\n  onMount () {\n    // Set the text direction if the page has not defined one.\n    const element = this.el\n    const direction = getTextDirection(element)\n    if (!direction) {\n      element.dir = 'ltr'\n    }\n  }\n\n  install () {\n    const { target } = this.opts\n    if (target) {\n      this.mount(target, this)\n    }\n  }\n\n  uninstall () {\n    this.unmount()\n  }\n}\n"],"mappings":"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"}